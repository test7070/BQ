z_ordexp_bq1:--z_ordexp_bq
declare @t_noa nvarchar(30)
set @t_noa = case when '#non' = [1] then '' else [1] end
declare @tmp table(
	gno nvarchar(1),
	datea nvarchar(10),
	custno nvarchar(50),
	comp nvarchar(100),
	rr int,
	page int,
	product nvarchar(100),
	spec nvarchar(100),
	price float,
	unit nvarchar(50),
	mount float
)
insert @tmp
select '0',a.datea,a.custno,c.comp,ROW_NUMBER()over(partition by a.custno order by b.no3),'',b.product,b.spec
,b.price,b.unit,b.mount
from view_ordex a left join view_ordexs b on a.noa=b.noa
left join cust c on a.custno=c.noa
where (a.noa = @t_noa)

declare @pageline int =28
declare @custno nvarchar(50) 
declare @idno int
declare @page int

update a
set rr=xidno,page=ceiling(cast(xidno as float)/@pageline)
from (select rr,page,row_number()over(partition by custno order by custno,rr) xidno from @tmp)a

--補空白行
declare cursor_table cursor for 
select custno,MAX(rr),MAX(page) from @tmp group by custno
open cursor_table 
fetch next from cursor_table 
into @custno,@idno,@page
while(@@FETCH_STATUS <> -1) 
begin
	while ((@idno)%@pageline>0)
	begin
		set @idno=@idno+1
		insert @tmp(gno,custno,rr,page)
		select '1',@custno,@idno,@page
	end

	fetch next from cursor_table 
	into @custno,@idno,@page
end 
close cursor_table 
deallocate cursor_table

insert @tmp(gno,custno,rr,page)
select '2',custno,99999,max(page)
from @tmp
group by custno

select 
dbo.getComma(price,2)price
,dbo.getComma(mount,-1)mount
,* from @tmp
order by custno,page,rr
;